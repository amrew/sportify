import Head from "next/head";
import type { InferGetServerSidePropsType, GetServerSideProps } from "next";
import { createPagesServerClient } from "@supabase/auth-helpers-nextjs";
import { Footer } from "~/app/footer";
import { Header } from "~/app/header";
import { ProductDetail } from "~/app/product-detail";
import { Container } from "~/uikit/container";
import { Box } from "~/uikit/box";

type Product = {
  id: number;
  slug: string;
  name: string;
  description: string;
  image_url: string;
  profile: {
    name: string;
    picture: string;
  };
};

type HomePageProps = {
  product: Product | null;
};

export const getServerSideProps = (async (ctx) => {
  const supabase = createPagesServerClient(ctx);
  const slug = ctx.params?.slug as string;

  const getProduct = async (slug: string) => {
    const { data: product } = await supabase
      .from("product")
      .select<
        any,
        Product
      >("id, name, description, image_url, slug, profile(name,picture)")
      .eq("slug", slug)
      .eq("status", true)
      .single();
    return product;
  };

  const [product] = await Promise.all([getProduct(slug)]);

  return {
    props: {
      product,
    },
  };
}) satisfies GetServerSideProps<HomePageProps>;

export default function ProductPage(
  props: InferGetServerSidePropsType<typeof getServerSideProps>
) {
  const product = props.product;
  return (
    <>
      <Head>
        <title>Sportify | {props.product?.name}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <Container>
        <Box mt={8}>
          {product ? (
            <ProductDetail
              onLike={() => {}}
              onShare={() => {}}
              item={{
                id: product.id,
                title: product.name,
                description: product.description,
                imageUrl: product.image_url,
                slug: product.slug,
                likes: 0,
                tags: [],
                author: product.profile
                  ? {
                      name: product.profile.name,
                      avatar: product.profile.picture,
                    }
                  : undefined,
                additionalImageUrls: [],
              }}
            />
          ) : null}
        </Box>
      </Container>
      <Footer />
    </>
  );
}
