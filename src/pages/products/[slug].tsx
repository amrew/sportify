import Head from "next/head";
import type { InferGetServerSidePropsType, GetServerSideProps } from "next";
import { createPagesServerClient } from "@supabase/auth-helpers-nextjs";
import { Footer } from "~/app/footer";
import { Header } from "~/app/header";
import { ProductDetail } from "~/app/product-detail";
import { Container } from "~/uikit/container";
import { Box } from "~/uikit/box";
import { Flex } from "~/uikit/flex";
import { Card } from "~/uikit/card";
import { Text } from "~/uikit/text";
import { Image } from "~/uikit/image";
import { Button } from "~/uikit/button";
import { ChevronRight } from "lucide-react";
import { Layout } from "~/uikit/layout";

type Product = {
  id: number;
  slug: string;
  name: string;
  description: string;
  image_url: string;
  profile: {
    name: string;
    picture: string;
  };
  product_image: {
    image_url: string;
  }[];
};

type HomePageProps = {
  product: Product | null;
};

export const getServerSideProps = (async (ctx) => {
  const supabase = createPagesServerClient(ctx);
  const slug = ctx.params?.slug as string;

  const getProduct = async (slug: string) => {
    const { data: product } = await supabase
      .from("product")
      .select<
        any,
        Product
      >("id, name, description, image_url, slug, profile(name,picture), product_image(image_url)")
      .eq("slug", slug)
      .eq("status", true)
      .single();
    return product;
  };

  const [product] = await Promise.all([getProduct(slug)]);

  if (!product) {
    return {
      notFound: true,
    };
  }

  return {
    props: {
      product,
    },
  };
}) satisfies GetServerSideProps<HomePageProps>;

export default function ProductPage(
  props: InferGetServerSidePropsType<typeof getServerSideProps>
) {
  const product = props.product;

  const purchaseLinks = (
    <Card>
      <Text weight="bold">Link Pembelian</Text>
      <Flex direction="column" gap={4} mt={4}>
        <Button full>
          <Image
            src="/tokopedia.svg"
            width={100}
            height={22}
            alt="Tokopedia Link"
          />
          <ChevronRight />
        </Button>
        <Button full>
          <Image src="/shopee.svg" width={100} height={32} alt="Shopee Link" />
          <ChevronRight />
        </Button>
      </Flex>
    </Card>
  );

  const productSpecs = (
    <Box mb={4}>
      <Card>
        <Text weight="bold" size="large">
          Informasi Produk
        </Text>
        <Flex direction="column" gap={4} mt={4}>
          <Flex gap={8}>
            <Box width={40}>
              <Text weight="bold">Brand</Text>
            </Box>
            <Text>Ortuseight</Text>
          </Flex>
          <Flex gap={8}>
            <Box width={40}>
              <Text weight="bold">Kategori</Text>
            </Box>
            <Text>Running Shoes</Text>
          </Flex>
          <Flex gap={8}>
            <Box width={40}>
              <Text weight="bold">Warna</Text>
            </Box>
            <Text>Black</Text>
          </Flex>
          <Flex gap={8}>
            <Box width={40}>
              <Text weight="bold">Berat</Text>
            </Box>
            <Text>240gr</Text>
          </Flex>
          <Flex gap={8}>
            <Box width={40}>
              <Text weight="bold">Material</Text>
            </Box>
            <Text>Mesh</Text>
          </Flex>
          <Flex gap={8}>
            <Box width={40}>
              <Text weight="bold">Size</Text>
            </Box>
            <Text>39-45</Text>
          </Flex>
        </Flex>
      </Card>
    </Box>
  );

  const productComponent = (
    <ProductDetail
      onLike={() => {}}
      item={{
        id: product.id,
        title: product.name,
        description: product.description,
        imageUrl: product.image_url,
        slug: product.slug,
        likes: 0,
        tags: [],
        author: product.profile
          ? {
              name: product.profile.name,
              avatar: product.profile.picture,
            }
          : undefined,
        additionalImageUrls: product.product_image.map(
          (image) => image.image_url
        ),
      }}
    />
  );

  return (
    <>
      <Head>
        <title>Sportify | {props.product?.name}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <Container>
        <Layout
          rightNode={
            <Box>
              {productSpecs}
              {purchaseLinks}
            </Box>
          }
        >
          {productComponent}
        </Layout>
      </Container>
      <Footer />
    </>
  );
}
